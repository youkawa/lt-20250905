name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (ESLint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Lint frontend only (stage 1)
        run: npx eslint "apps/frontend/src/**/*.{ts,tsx,js}" --max-warnings=0
      - name: Lint API (stage 2)
        run: npx eslint "apps/api/src/**/*.ts" --max-warnings=0

  frontend-unit:
    name: Frontend Unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps (workspace)
        run: npm ci
      - name: Build (type-check enabled)
        working-directory: apps/frontend
        run: npm run build
      - name: Run unit tests (Vitest)
        working-directory: apps/frontend
        run: npm test --silent

  frontend-e2e:
    name: Frontend E2E (Playwright)
    runs-on: ubuntu-latest
    needs: frontend-unit
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('apps/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install Playwright browsers
        working-directory: apps/frontend
        run: npx playwright install --with-deps
      - name: Build
        working-directory: apps/frontend
        run: npm run build
      - name: Run E2E
        working-directory: apps/frontend
        run: npm run test:e2e --silent -- --retries=2
      - name: Upload Playwright report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/frontend/playwright-report/
          if-no-files-found: ignore

  api:
    name: API (Jest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Build (type-check)
        working-directory: apps/api
        run: npm run build
      - name: Run tests
        working-directory: apps/api
        run: npm test --silent

  notebook:
    name: Notebook Service (pytest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Python deps
        working-directory: apps/notebook-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run pytest
        working-directory: apps/notebook-service
        run: PYTHONPATH=. pytest -q
